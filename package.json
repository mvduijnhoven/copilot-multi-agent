{
  "name": "copilot-multi-agent",
  "displayName": "Copilot Multi-Agent",
  "description": "Enhance GitHub Copilot Chat with multi-agent capabilities. Configure specialized AI agents for different development tasks and enable sophisticated task delegation workflows.",
  "version": "0.1.0",
  "publisher": "your-publisher-name",
  "author": {
    "name": "Your Name",
    "email": "your.email@example.com"
  },
  "license": "MIT",
  "homepage": "https://github.com/mvduijnhoven/copilot-multi-agent#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/mvduijnhoven/copilot-multi-agent.git"
  },
  "bugs": {
    "url": "https://github.com/mvduijnhoven/copilot-multi-agent/issues"
  },
  "keywords": [
    "copilot",
    "ai",
    "multi-agent",
    "chat",
    "delegation",
    "assistant",
    "productivity",
    "development"
  ],
  "engines": {
    "vscode": "^1.105.0"
  },
  "extensionDependencies": [
    "github.copilot-chat"
  ],
  "categories": [
    "AI",
    "Chat",
    "Other"
  ],
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "qna": "marketplace",
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "capabilities": {
    "virtualWorkspaces": {
      "supported": "limited",
      "description": "Some features may not work in virtual workspaces"
    },
    "untrustedWorkspaces": {
      "supported": "limited",
      "description": "Agent configurations may be restricted in untrusted workspaces"
    }
  },
  "pricing": "Free",
  "sponsor": {
    "url": "https://github.com/sponsors/your-username"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "chatParticipants": [
      {
        "id": "copilot-multi-agent.coordinator",
        "name": "multi-agent",
        "description": "Multi-agent coordinator for specialized AI assistance",
        "isSticky": true
      }
    ],
    "configuration": {
      "title": "Copilot Multi-Agent",
      "properties": {
        "copilotMultiAgent.entryAgent": {
          "type": "string",
          "description": "Name of the agent that handles initial chat conversations. Must match one of the configured agent names.",
          "default": "coordinator",
          "pattern": "^[a-zA-Z0-9-_]+$",
          "minLength": 1,
          "maxLength": 50
        },
        "copilotMultiAgent.agents": {
          "type": "array",
          "description": "Configuration for all agents in the multi-agent system",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Unique identifier for the agent (letters, numbers, hyphens, and underscores only)",
                "pattern": "^[a-zA-Z0-9-_]+$",
                "minLength": 1,
                "maxLength": 50
              },
              "systemPrompt": {
                "type": "string",
                "description": "System prompt that defines the agent's behavior, expertise, and capabilities",
                "minLength": 1,
                "maxLength": 5000
              },
              "description": {
                "type": "string",
                "description": "Brief description of the agent's purpose and capabilities",
                "minLength": 1,
                "maxLength": 200
              },
              "useFor": {
                "type": "string",
                "description": "Description of what tasks or domains this agent specializes in",
                "minLength": 1,
                "maxLength": 200
              },
              "delegationPermissions": {
                "type": "object",
                "description": "Controls which agents this agent can delegate work to",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "all",
                      "none",
                      "specific"
                    ],
                    "description": "Delegation permission type: 'all' allows delegation to any agent, 'none' disables delegation, 'specific' allows delegation to selected agents only"
                  },
                  "agents": {
                    "type": "array",
                    "description": "List of agent names that can be delegated to (only used when type is 'specific')",
                    "items": {
                      "type": "string",
                      "pattern": "^[a-zA-Z0-9-_]+$",
                      "minLength": 1,
                      "maxLength": 50
                    },
                    "uniqueItems": true
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              },
              "toolPermissions": {
                "type": "object",
                "description": "Controls which tools this agent has access to",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "all",
                      "none",
                      "specific"
                    ],
                    "description": "Tool permission type: 'all' grants access to all tools, 'none' disables all tools, 'specific' grants access to selected tools only"
                  },
                  "tools": {
                    "type": "array",
                    "description": "List of tool names that can be used (only used when type is 'specific')",
                    "items": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 100
                    },
                    "uniqueItems": true
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              }
            },
            "required": [
              "name",
              "systemPrompt",
              "description",
              "useFor",
              "delegationPermissions",
              "toolPermissions"
            ],
            "additionalProperties": false
          },
          "default": [
            {
              "name": "coordinator",
              "systemPrompt": "You are a coordinator agent responsible for orchestrating tasks and delegating work to specialized agents. Analyze the user's request and determine if it can be handled directly or if it should be delegated to a more specialized agent.",
              "description": "Coordinates work between specialized agents",
              "useFor": "Task orchestration and delegation",
              "delegationPermissions": {
                "type": "all"
              },
              "toolPermissions": {
                "type": "specific",
                "tools": [
                  "delegateWork",
                  "reportOut"
                ]
              }
            }
          ],
          "minItems": 1,
          "maxItems": 20
        }
      }
    },
    "commands": [
      {
        "command": "copilot-multi-agent.resetConfiguration",
        "title": "Reset Configuration to Defaults",
        "category": "Multi-Agent"
      },
      {
        "command": "copilot-multi-agent.validateConfiguration",
        "title": "Validate and Fix Configuration",
        "category": "Multi-Agent"
      },
      {
        "command": "copilot-multi-agent.showStatus",
        "title": "Show Extension Status",
        "category": "Multi-Agent"
      },
      {
        "command": "copilot-multi-agent.openSettings",
        "title": "Open Settings",
        "category": "Multi-Agent"
      },
      {
        "command": "copilot-multi-agent.showCompatibilityReport",
        "title": "Show Compatibility Report",
        "category": "Multi-Agent"
      },
      {
        "command": "copilot-multi-agent.checkCompatibility",
        "title": "Check Compatibility",
        "category": "Multi-Agent"
      },
      {
        "command": "copilot-multi-agent.toggleCompatibilityMode",
        "title": "Toggle Compatibility Mode",
        "category": "Multi-Agent"
      },
      {
        "command": "copilot-multi-agent.refreshTools",
        "title": "Refresh Available Tools",
        "category": "Multi-Agent"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "npm run check-types && npm run lint && node esbuild.js",
    "watch": "npm-run-all -p watch:*",
    "watch:esbuild": "node esbuild.js --watch",
    "watch:tsc": "tsc --noEmit --watch --project tsconfig.json",
    "package": "npm run check-types && npm run lint && node esbuild.js --production",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "check-types": "tsc --noEmit",
    "lint": "eslint src --fix",
    "lint:check": "eslint src",
    "test": "vscode-test",
    "test:unit": "npm run compile-tests && vscode-test --run",
    "clean": "rimraf out dist *.vsix",
    "build": "npm run clean && npm run package",
    "build:check": "node scripts/build-check.js",
    "package:vsix": "npm run build && vsce package",
    "publish": "vsce publish",
    "install:local": "code --install-extension *.vsix"
  },
  "dependencies": {
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/sinon": "^17.0.4",
    "@types/uuid": "^10.0.0",
    "@types/vscode": "^1.105.0",
    "@typescript-eslint/eslint-plugin": "^8.45.0",
    "@typescript-eslint/parser": "^8.45.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.2.1",
    "esbuild": "^0.25.10",
    "eslint": "^9.36.0",
    "npm-run-all": "^4.1.5",
    "rimraf": "^6.0.1",
    "sinon": "^21.0.0",
    "typescript": "^5.9.3"
  }
}